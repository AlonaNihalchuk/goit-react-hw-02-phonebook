{"version":3,"sources":["components/Contacts/Filter.module.css","components/Form/Form.js","components/Contacts/Filter.js","components/Contacts/Contacts.js","App.js","index.js","components/Contacts/Contacts.module.css","components/Form/Form.module.css"],"names":["module","exports","Form","state","name","number","handleNameChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","formReset","randomId","uuidv4","this","className","style","formSection","formLabel","onChange","type","pattern","title","required","formBtn","React","Component","propType","PropTypes","func","isRequired","string","Filter","filter","Contacts","contacts","filterValue","onDelete","contactsHead","contactsList","map","contact","contactsItem","contactsName","contactsButton","onClick","id","App","formSubmitHandler","newContact","find","alert","prevState","changeFilter","currentTarget","getVisibleContact","normalizedFilter","toLowerCase","includes","deleteContact","contactId","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11c8149c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1_cwy\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport style from './Form.module.css';\n\nclass Form extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleNameChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.formReset();\n  };\n  formReset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  randomId = uuidv4();\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={style.formSection}>\n        <label className={style.formLabel}>\n          Name{' '}\n          <input\n            onChange={this.handleNameChange}\n            value={this.state.name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={style.formLabel}>\n          Phone{' '}\n          <input\n            onChange={this.handleNameChange}\n            value={this.state.number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифер и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={style.formBtn}>\n          Save\n        </button>\n      </form>\n    );\n  }\n}\nForm.propType = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\nexport default Form;\n","import PropTypes from 'prop-types';\nimport style from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={style.filter}>\n      Find contact by name{' '}\n      <input\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\nFilter.propType = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Filter from './Filter';\nimport style from './Contacts.module.css';\n\nclass Contacts extends React.Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n    filterValue: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n  };\n  render() {\n    const { contacts, filterValue, onChange, onDelete } = this.props;\n    return (\n      <section className={style.contacts}>\n        <h2 className={style.contactsHead}>Contacts </h2>\n        <Filter value={filterValue} onChange={onChange} />\n\n        <ul className={style.contactsList}>\n          {contacts.map(contact => (\n            <li className={style.contactsItem} key={contact.id}>\n              <p className={style.contactsName}>{contact.name}:</p>\n              <p>{contact.number}</p>\n              <button\n                className={style.contactsButton}\n                onClick={() => {\n                  onDelete(contact.id);\n                }}\n              >\n                delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default Contacts;\n","import './App.css';\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (this.state.contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n    this.setState(prevState => ({\n      contacts: [{ ...newContact }, ...prevState.contacts],\n    }));\n    // console.log(this.state.contacts);\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContact = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  render() {\n    return (\n      <section className=\"phonebook\">\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.formSubmitHandler} />\n        {this.state.contacts.length === 0 ? (\n          <p className=\"noContacts\">There are no contacts</p>\n        ) : (\n          <Contacts\n            contacts={this.getVisibleContact()}\n            filterValue={this.state.filter}\n            onChange={this.changeFilter}\n            onDelete={this.deleteContact}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsHead\":\"Contacts_contactsHead__4RBfu\",\"contactsList\":\"Contacts_contactsList__29dST\",\"contactsButton\":\"Contacts_contactsButton__1dU2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSection\":\"Form_formSection__3ImTg\",\"formLabel\":\"Form_formLabel__1Ch70\",\"formBtn\":\"Form_formBtn__9Tks5\"};"],"sourceRoot":""}